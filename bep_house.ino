#include <WiFi.h>
#include <WiFiClientSecure.h>
#include <UniversalTelegramBot.h>
#include <ArduinoJson.h>
#include <DHT.h>  // Th√™m th∆∞ vi·ªán DHT
#include <ESP32Servo.h>// Th∆∞ vi·ªán Servo

const char* ssid = "hihi";       // T√™n WiFi c·ªßa Kh√°nh
const char* password = "22222222"; // M·∫≠t kh·∫©u WiFi

const String BOT_TOKEN = "7224249343:AAGnwC7ePEiawnyAxgasVT71rG4_2ROjejc"; // Token bot
const String CHAT_ID = "-4506696436"; // Chat ID c·ªßa Kh√°nh
WiFiClientSecure client;
UniversalTelegramBot bot(BOT_TOKEN, client);
int botRequestDelay = 1000;
unsigned long lastTimeBotRan = 0;
unsigned long doorOpenMillis = 0;  // L∆∞u th·ªùi gian khi c·ª≠a m·ªü
const long doorOpenTimeout = 15000; // Th·ªùi gian t·ªëi ƒëa (5 gi√¢y) tr∆∞·ªõc khi th√¥ng b√°o
bool doorAlertSent = false;
unsigned long lastAlertMillis = 0; // Th·ªùi gian g·ª≠i c·∫£nh b√°o g·∫ßn nh·∫•t
unsigned long previousMillis = 0;  // Bi·∫øn d√πng ƒë·ªÉ ƒëo th·ªùi gian
const long interval = 1500;       // Kho·∫£ng c√°ch th·ªùi gian gi·ªØa c√°c l·∫ßn ki·ªÉm tra
const int reedSwitch = 14;        // Ch√¢n GPIO k·∫øt n·ªëi v·ªõi c·∫£m bi·∫øn c·ª≠a
bool changeState = false;         // C·ªù b√°o hi·ªáu tr·∫°ng th√°i thay ƒë·ªïi
bool state;                       // Tr·∫°ng th√°i hi·ªán t·∫°i c·ªßa c·ª≠a (m·ªü/ƒë√≥ng)
String doorState;
Servo servoRainCover; 
const int servoRainPin = 12;
const int relay = 26;                     // ch√¢n relay
const int buzzer = 21;                    // ch√¢n c√≤i
const int ledPin = 2;                     // Ch√¢n k·∫øt n·ªëi LED ngo√†i
bool ledState = LOW;
bool isWatering = false;
bool hasSentWateredMessage = false;
const int gasPin = 34;                     // Ch√¢n c·∫£m bi·∫øn kh√≠ gas
const int flamePin = 35;                    // ch√¢n c·∫£m bi·∫øn l·ª≠a
const int rainPin = 33;                       //ch√¢n c·∫£m bi·∫øn m∆∞a
const int moisturePin = 32;                //ƒë·ªô ·∫©m ƒë·∫•t    
const int THRESHOLD_GAS = 2000;            // Ng∆∞·ª°ng cho c·∫£m bi·∫øn kh√≠ gas
const int THRESHOLD_FLAME = 500;
const int THRESHOLD_RAIN = 2000;
const int DHTPIN = 4;                       // Ch√¢n k·∫øt n·ªëi c·∫£m bi·∫øn DHT
const int DHTTYPE = DHT11;                   // Ki·ªÉu c·∫£m bi·∫øn (DHT11 ho·∫∑c DHT22)
DHT dht(DHTPIN, DHTTYPE);  // Kh·ªüi t·∫°o c·∫£m bi·∫øn DHT

ICACHE_RAM_ATTR void changeDoorStatus() {
  changeState = true;
}

Servo servoMotor;                         // Kh·ªüi t·∫°o ƒë·ªông c∆° servo
const int servoPin = 13;                  // Ch√¢n k·∫øt n·ªëi ƒë·ªông c∆° servo
bool isRaining = false;                  // Tr·∫°ng th√°i m∆∞a

void handleNewMessages(int numNewMessages) {
  for (int i = 0; i < numNewMessages; i++) {
    String chat_id = String(bot.messages[i].chat_id);
    if (chat_id != CHAT_ID) {
      bot.sendMessage(chat_id, "Unauthorized user", "");
      continue;
    }

    String text = bot.messages[i].text;
    if (text == "/batdenbep") {
      ledState = HIGH;
      digitalWrite(ledPin, ledState);
      bot.sendMessage(chat_id, "üí°LED state set to ON", "");
    }
    
    if (text == "/tatdenbep") {
      ledState = LOW;
      digitalWrite(ledPin, ledState);
      bot.sendMessage(chat_id, "LED state set to OFF", "");
    }
    
    if (text == "/trangthaidenbep") {
      bot.sendMessage(chat_id, digitalRead(ledPin) ? "LED is ON" : "LED is OFF", "");
    }
    if (text == "/dongcua") {
      servoMotor.write(100);
      
    }
    if (text == "/mocua") {
      servoMotor.write(0);
    }
    
    if (text == "/dongmai") {
      servoRainCover.write(90);
      bot.sendMessage(CHAT_ID, "M√°i ƒë√£ ƒê√≥ng");
    }
    if (text == "/momai") {
      servoRainCover.write(0);
      bot.sendMessage(CHAT_ID, "M√°i ƒë√£ M·ªü");
    }

    if (text == "/doamdat") {
      int moistureLevel = analogRead(moisturePin);
      int moisture = (100-((moistureLevel / 4095.00)* 100));
      bot.sendMessage(chat_id, "ƒê·ªô ·∫©m ƒë·∫•t: " + String(moisture), "");
     
      }
    if (text == "/temp") {
      float h = dht.readHumidity();    // ƒê·ªçc ƒë·ªô ·∫©m
      float t = dht.readTemperature(); // ƒê·ªçc nhi·ªát ƒë·ªô

      if (isnan(h) || isnan(t)) {
        bot.sendMessage(chat_id, "Failed to read from DHT sensor!", "");
      } else {
        String tempMessage = "üå°Ô∏è Nhi·ªát ƒë·ªô: " + String(t) + "¬∞C\n" + "üíß ƒê·ªô ·∫©m: " + String(h) + "%";
        bot.sendMessage(chat_id, tempMessage, "");
      }
    }
  }
}


void setup() {
  Serial.begin(115200);
  pinMode(ledPin, OUTPUT);
  pinMode(rainPin, INPUT);
  pinMode(moisturePin, INPUT);
  pinMode(buzzer,OUTPUT);
  pinMode(relay,OUTPUT);
  pinMode(reedSwitch, INPUT_PULLUP);
  state = digitalRead(reedSwitch);
  attachInterrupt(digitalPinToInterrupt(reedSwitch), changeDoorStatus, CHANGE);

  digitalWrite(relay,HIGH);
  digitalWrite(ledPin, ledState);
  WiFi.begin(ssid, password);
  client.setInsecure();
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("K·∫øt n·ªëi WiFi th√†nh c√¥ng!");
  Serial.println(WiFi.localIP());
  dht.begin(); // Kh·ªüi t·∫°o c·∫£m bi·∫øn 
  servoMotor.attach(servoPin); // Kh·ªüi ƒë·ªông ƒë·ªông c∆° servo
  servoMotor.write(90);
  servoRainCover.attach(servoRainPin); // G√°n ƒë·ªông c∆° servo m·ªõi
  servoRainCover.write(0);  // ƒê·∫∑t g√≥c ban ƒë·∫ßu cho servo che m∆∞a 
  bot.sendMessage(CHAT_ID, "Bot Started", "");
}

void loop() {
  if (WiFi.status() == WL_CONNECTED) {
    if (millis() > lastTimeBotRan + botRequestDelay) {
      int numNewMessages = bot.getUpdates(bot.last_message_received + 1);
      while (numNewMessages) {
        handleNewMessages(numNewMessages);
        numNewMessages = bot.getUpdates(bot.last_message_received + 1);
      }
      lastTimeBotRan = millis();
    }
    int rainStatus = analogRead(rainPin);
    int gasLevel = analogRead(gasPin);
    int flameLevel = analogRead(flamePin);
    int moistureLevel = analogRead(moisturePin);
    int moisture = (100-((moistureLevel / 4095.00)* 100));

    Serial.print("M·ª©c kh√≠ gas: ");
    Serial.println(gasLevel);
    Serial.print("M·ª©c l·ª≠a: ");
    Serial.println(flameLevel);
    Serial.print("Tr·∫°ng th√°i c·∫£m bi·∫øn m∆∞a: ");
    Serial.println(rainStatus);
    Serial.print("ƒê·ªô ·∫©m ƒë·∫•t: ");
    Serial.println(moisture);

    if (changeState) {
  unsigned long currentMillis = millis();
  if (currentMillis - previousMillis >= interval) {
    previousMillis = currentMillis;

    // C·∫≠p nh·∫≠t tr·∫°ng th√°i c·ª≠a
    state = !state;
    if (state) {
      doorState = "ƒë√≥ng";
      doorAlertSent = false;       // Reset c·∫£nh b√°o khi c·ª≠a ƒë√≥ng
    } else {
      doorState = "m·ªü";
      doorOpenMillis = millis();  // Ghi l·∫°i th·ªùi gian c·ª≠a ƒë∆∞·ª£c m·ªü
    }

    // G·ª≠i th√¥ng b√°o tr·∫°ng th√°i qua Telegram
    bot.sendMessage(CHAT_ID, "üö™ C·ª≠a ƒëang " + doorState, "");
    changeState = false;  // Reset c·ªù thay ƒë·ªïi tr·∫°ng th√°i
  }
}

// Ki·ªÉm tra n·∫øu c·ª≠a ƒëang m·ªü qu√° l√¢u
if (!state) { // N·∫øu c·ª≠a ƒëang m·ªü
  unsigned long currentMillis = millis();
  if (currentMillis - doorOpenMillis >= doorOpenTimeout) { // N·∫øu ƒë√£ qu√° 5 gi√¢y t·ª´ khi c·ª≠a m·ªü
    if (currentMillis - lastAlertMillis >= doorOpenTimeout) { // G·ª≠i c·∫£nh b√°o m·ªói 5 gi√¢y
      bot.sendMessage(CHAT_ID, "‚ö†Ô∏è C·∫£nh b√°o! C·ª≠a ƒë√£ m·ªü qu√° l√¢u !!!", "");
      lastAlertMillis = currentMillis; // C·∫≠p nh·∫≠t th·ªùi gian g·ª≠i c·∫£nh b√°o g·∫ßn nh·∫•t
    }
  }
}
  


    if (gasLevel > THRESHOLD_GAS) {
      String message = "‚ö†Ô∏è C·∫£nh b√°o: Ph√°t hi·ªán m·ª©c kh√≠ gas cao! M·ª©c ƒëo: " + String(gasLevel);
      bot.sendMessage(CHAT_ID, message, "");
      for (int i= 0 ;i < 4 ; i++)
      {
        digitalWrite(buzzer , 1);
        delay(2000);
        digitalWrite(buzzer , 0);
        delay(2000);
        }
      delay(30000);
    }

    if (flameLevel < THRESHOLD_FLAME) {
      String message = "üî• C·∫£nh b√°o: Ph√°t hi·ªán c√≥ l·ª≠a! M·ª©c ƒëo: " + String(flameLevel);
      bot.sendMessage(CHAT_ID, message, "");
      for (int i= 0 ;i < 4 ; i++)
      {
        digitalWrite(buzzer , 1);
        delay(2000);
        digitalWrite(buzzer , 0);
        delay(2000);
        }
        delay(30000);
    }
    
    if (moisture < 30 && !isWatering) { // N·∫øu ƒë·ªô ·∫©m ƒë·∫•t qu√° th·∫•p v√† ch∆∞a t∆∞·ªõi
        String message = "üå± C·∫£nh b√°o: ƒë·ªô ·∫©m ƒë·∫•t ƒëang ·ªü m·ª©c: " + String(moisture) + "\nƒê·∫•t qu√° kh√¥, ƒëang t∆∞·ªõi n∆∞·ªõc!";
        bot.sendMessage(CHAT_ID, message, "");
        digitalWrite(relay, LOW); // B·∫≠t m√°y b∆°m n∆∞·ªõc
        isWatering = true; // ƒê√°nh d·∫•u l√† ƒëang t∆∞·ªõi n∆∞·ªõc
        hasSentWateredMessage = false; // ƒê·∫∑t l·∫°i tr·∫°ng th√°i ƒë√£ g·ª≠i th√¥ng b√°o t∆∞·ªõi c√¢y
    }
    else if (moisture >= 30) {
        if (isWatering && !hasSentWateredMessage) { // N·∫øu ƒëang t∆∞·ªõi v√† ch∆∞a g·ª≠i th√¥ng b√°o
            digitalWrite(relay, HIGH); // T·∫Øt m√°y b∆°m n∆∞·ªõc
            int newMoisture = (100-((moistureLevel / 4095.00)* 100));
            String successMessage = "üí¶üå± ƒê√£ t∆∞·ªõi c√¢y!\nƒê·ªô ·∫©m sau khi t∆∞·ªõi: " + String(newMoisture);
            bot.sendMessage(CHAT_ID, successMessage, "");
            hasSentWateredMessage = true; // ƒê√°nh d·∫•u l√† ƒë√£ g·ª≠i th√¥ng b√°o t∆∞·ªõi c√¢y
        }
        isWatering = false; // ƒê·∫∑t l·∫°i tr·∫°ng th√°i t∆∞·ªõi n∆∞·ªõc n·∫øu ƒë·ªô ·∫©m ƒë·ªß
    }



    if (rainStatus < THRESHOLD_RAIN) {  // Khi ph√°t hi·ªán c√≥ n∆∞·ªõc, tr·∫°ng th√°i s·∫Ω l√† LOW
      if (!isRaining) {  // Ch·ªâ th·ª±c hi·ªán n·∫øu tr·∫°ng th√°i thay ƒë·ªïi
        isRaining = true;
        String message = "üåßÔ∏è C·∫£nh b√°o: Ph√°t hi·ªán c√≥ m∆∞a!";
        bot.sendMessage(CHAT_ID, message, "");

        servoRainCover.write(90); // ƒê√≥ng n·∫Øp che (ƒë·∫∑t g√≥c t√πy √Ω)
        delay(500); // ƒê·ª£i m·ªôt ch√∫t ƒë·ªÉ ƒë·ªông c∆° ho√†n th√†nh chuy·ªÉn ƒë·ªông
       // C√≥ th·ªÉ k·∫øt h·ª£p ƒëi·ªÅu khi·ªÉn ƒë·ªông c∆° kh√°c (n·∫øu c·∫ßn)
        bot.sendMessage(CHAT_ID, "M√°i ƒë√£ ƒê√≥ng");
      }
    } else if (rainStatus >= THRESHOLD_RAIN && isRaining) {  // Khi tr·ªùi kh√¥ng c√≤n m∆∞a
      isRaining = false;
      bot.sendMessage(CHAT_ID, "üåû Tr·ªùi ƒë√£ h·∫øt m∆∞a.", "");

      servoRainCover.write(0); // M·ªü n·∫Øp che (ƒë·∫∑t g√≥c t√πy √Ω)
       // ƒê·∫∑t l·∫°i ƒë·ªông c∆° kh√°c (n·∫øu c·∫ßn)
      bot.sendMessage(CHAT_ID, "M√°i ƒë√£ M·ªü");
    }
    }
  delay(1000);
}